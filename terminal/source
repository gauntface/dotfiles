TERMINAL_DIR="${HOME}/Projects/Tools/dotfiles/terminal"

# Add alises
source "${TERMINAL_DIR}/aliases"

# Add NPM-Packages directory
export NPM_PACKAGES="${HOME}/.npm-packages"
export NPM_CONFIG_PREFIX="$NPM_PACKAGES"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules${NODE_PATH:+:$NODE_PATH}"
export PATH="$NPM_PACKAGES/bin:$PATH"

# Add go to path
export PATH=$PATH:/usr/local/go/bin
export GOPATH="${HOME}/Projects/go"
export PATH=$PATH:${GOPATH}/bin

# Add Ruby to path
export GEM_HOME="$HOME/Projects/ruby/gems"
export PATH="$HOME/Projects/ruby/bin:$PATH"

OS="$(uname -s)"
case "${OS}" in
	Linux*)
		OS="${OS} - $(awk -F= '/^NAME/{print $2}' /etc/os-release | xargs)"
		;;
esac
case "${OS}" in
    "Linux - Ubuntu"*)
        source "${TERMINAL_DIR}/source-ubuntu"
        ;;
    "Linux - Fedora"*)
    	source "${TERMINAL_DIR}/source-fedora"
        ;;
    Darwin*)
        source "${TERMINAL_DIR}/source-darwin"
        ;;
    *)
        # NOOP
        ;;
esac

# Manage venv
function cd() {
  builtin cd "$@"

  if [[ -z "$VIRTUAL_ENV" ]] ; then
    ## If env folder is found then activate the vitualenv
      if [[ -d ./.venv ]] ; then
        echo -e "üåê venv: activating "
        source ./.venv/bin/activate
      fi
  else
    ## check the current folder belong to earlier VIRTUAL_ENV folder
    # if yes then do nothing
    # else deactivate
      parentdir="$(dirname "$VIRTUAL_ENV")"
      if [[ "$PWD"/ != "$parentdir"/* ]] ; then
        echo -e "üåê venv: deactivating"
        deactivate
      fi
  fi
}
